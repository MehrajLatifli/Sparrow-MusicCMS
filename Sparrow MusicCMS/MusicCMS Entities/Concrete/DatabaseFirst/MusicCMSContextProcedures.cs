// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.Data.SqlClient;
using Microsoft.EntityFrameworkCore;
using MusicCMS_Entities.Concrete.DatabaseFirst;
using System;
using System.Collections.Generic;
using System.Data;
using System.Threading;
using System.Threading.Tasks;

namespace MusicCMS_Entities.Concrete.DatabaseFirst
{
    public partial class MusicCMSContext
    {
        private IMusicCMSContextProcedures _procedures;

        public virtual IMusicCMSContextProcedures Procedures
        {
            get
            {
                if (_procedures is null) _procedures = new MusicCMSContextProcedures(this);
                return _procedures;
            }
            set
            {
                _procedures = value;
            }
        }

        public IMusicCMSContextProcedures GetProcedures()
        {
            return Procedures;
        }

        protected void OnModelCreatingGeneratedProcedures(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<PlaylistMusicStoredProcedureResult>().HasNoKey().ToView(null);
        }
    }

    public partial class MusicCMSContextProcedures : IMusicCMSContextProcedures
    {
        private readonly MusicCMSContext _context;

        public MusicCMSContextProcedures(MusicCMSContext context)
        {
            _context = context;
        }

        public virtual async Task<List<PlaylistMusicStoredProcedureResult>> PlaylistMusicStoredProcedureAsync(int? pl, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                new SqlParameter
                {
                    ParameterName = "pl",
                    Value = pl ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Int,
                },
                parameterreturnValue,
            };
            var _ = await _context.SqlQueryAsync<PlaylistMusicStoredProcedureResult>("EXEC @returnValue = [dbo].[PlaylistMusicStoredProcedure] @pl", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }
    }
}
